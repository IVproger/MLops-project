name: Model testing

on:
  push:
    paths: [src/**, scripts/**, services/airflow/dags/**, tests/**, configs/**, .github/**]
  pull_request:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #               Check-out repo
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      #----------------------------------------------
      #                Set up Python
      #----------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      #----------------------------------------------
      #       Install Poetry if not cached
      #----------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-1.8.3  # increment to reset cache
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: '1.8.3'
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #  Install project dependencies if not cached
      #----------------------------------------------
      - name: Load cached Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev
      #----------------------------------------------
      #   Run Giskard validation for champion model
      #----------------------------------------------
      - name: Download sample data
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry run python3 -m src.download_sample
      - name: Validate champion model
        run: poetry run mlflow run . --env-manager=local -e validate
